#!/bin/bash
# Prepare for the test.
# Havn't check for the cgroup setting.
# Flush all filesystem buffer and free pagecache, dentries and inodes.
sync && echo 3 > /proc/sys/vm/drop_caches
hierarchy01=blkio

# Set iotop watch time.
#watch_delay=0.5
watch_count=30

# Set test cgroup names.
cg01="/cgtest01"
cg02="/cgtest02"

# Set testfiles' path.
testfile_path01="/tmp/testfile01"
testfile_path02="/tmp/testfile02"

# Do the test.
# Starting read processes in cgroup.
sh -c "echo \$$ >> /cgroup/${hierarchy01}/${cg01}/tasks && dd if=${testfile_path01} of=/dev/null" &
sh -c "echo \$$ >> /cgroup/${hierarchy01}/${cg02}/tasks && dd if=${testfile_path02} of=/dev/null" &

# Get the ppids of the read processes.
ppid01=`ps --ppid $$ | grep sh | head -1 | awk '{print $1}'`
ppid02=`ps --ppid $$ | grep sh | tail -1 | awk '{print $1}'`

# Get the pid of the read processes by their ppids.
pid01=`ps --ppid $ppid01 | tail -1 | awk '{print $1}'`
pid02=`ps --ppid $ppid02 | tail -1 | awk '{print $1}'`
trap "kill -9 $pid01 $pid02 >/dev/null 2>&1" EXIT

for ((i=0;i<=${watch_count};i++))
do
    pid01_read_pre=`cat /proc/"${pid01}"/io | grep '^read_bytes' | awk '{print $2}'`
    pid02_read_pre=`cat /proc/"${pid02}"/io | grep '^read_bytes' | awk '{print $2}'`

    sleep 1;

    pid01_read_end=`cat /proc/"${pid01}"/io | grep '^read_bytes' | awk '{print $2}'`
    pid02_read_end=`cat /proc/"${pid02}"/io | grep '^read_bytes' | awk '{print $2}'`

    pid01_read_speed_now=$((pid01_read_end-pid01_read_pre+pid01_read_speed_now));
    echo $pid01_read_speed_now;
    pid02_read_speed_now=$((pid02_read_end-pid02_read_pre+pid02_read_speed_now));
    echo $pid02_read_speed_now;
done

awk 'BEGIN {
	pid01_avg_speed='"$pid01_read_speed_now"'/'"${watch_count}"'/1024/1024;
	print pid01_avg_speed
	pid02_avg_speed='"$pid02_read_speed_now"'/'"${watch_count}"'/1024/1024;
	cg01="'"$cg01"':";
	cg02="'"$cg02"':";
	printf("%-16s%f\n", cg01, pid01_avg_speed);
	printf("%-16s%f\n", cg02, pid02_avg_speed);
}'
